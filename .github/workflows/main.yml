name: C++/Qt Build and Test

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]

jobs:
  build:
    # Убираем простую матрицу и используем более гибкую структуру
    strategy:
      # fail-fast: false означает, что если упадет сборка на одной ОС, другие продолжат работать
      fail-fast: false
      matrix:
        # Явно перечисляем комбинации ОС и архитектуры Qt
        include:
          - os: windows-latest
            qt_arch: win64_mingw
            qt_version: '6.7.1'
          - os: ubuntu-latest
            qt_arch: gcc_64
            qt_version: '6.7.1'
          - os: macos-13
            qt_arch: clang_64
            qt_version: '6.7.1'

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # Шаг установки Qt теперь использует архитектуру из матрицы
    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: ${{ matrix.qt_version }}
        # Явно указываем архитектуру для каждой ОС
        arch: ${{ matrix.qt_arch }}
        modules: 'widgets multimedia linguisttools'

    - name: Install system dependencies (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y libgl1-mesa-dev libxcb-xinerama0 libxkbcommon-x11-0

    - name: Configure CMake
      run: cmake -B build -DCMAKE_BUILD_TYPE=Release

    - name: Build Project
      run: cmake --build build --config Release --parallel
